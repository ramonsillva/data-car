@page "/"
@using DataTableApp.Data
@using tableApp.Components.Card
@rendermode InteractiveServer

<div class="container-fluid py-4">
    <h1 class="text-center mb-4 fw-bold">Quadro de Serviços</h1>

    <div class="row g-3 table-board">
        @foreach (var status in StateUses)
        {
            <div class="col-12 col-md-6 col-lg-4 col-xl-2">
                <div class="table-column h-100 @(dropTargetStatus == status ? "can-drop" : "")" 
                     @ondrop="() => HandleDrop(status)"
                     @ondragover="OnDragOver" 
                     @ondragover:preventDefault="true" 
                     @ondragenter="() => HandleDragEnter(status)">

                    <div class="d-flex justify-content-between align-items-center mb-3 p-2">
                        <h6 class="mb-0 fw-semibold text-secondary">@status</h6>
                        <button class="btn btn-sm btn-hover border-0 p-2" 
                                @onclick="() => OpenNewCardForm(status)"
                                title="Adicionar novo card">
                            <i class="text-secondary bi bi-plus fs-4"></i>
                        </button>
                    </div>

                    <div class="column-cards flex-grow-1">
                        @foreach (var os in Os.Where(o => o.Status == status))
                        {
                            <Card Title="@($"OS: {os.Os}")" OnDragStart="@(() => HandleDragStart(os))">
                                <div class="mb-2">
                                    <small class="text-muted">Cliente:</small>
                                    <div class="text-secondary fw-semibold">@os.Cliente</div>
                                </div>
                                
                                <div class="mb-2">
                                    <small class="text-muted">Placa:</small>
                                    <div class="text-secondary fw-semibold">@os.Placa</div>
                                </div>

                                <hr class="my-2">
                                
                                <div class="d-flex align-items-center text-muted">
                                    <i class="bi bi-calendar-check me-2"></i>
                                    <small>@os.DataAbertura.ToString("dd/MM")</small>

                                </div>
                                
                                @if (os.DataFechamento.HasValue)
                                {
                                    <div class="d-flex align-items-center text-secondary mt-1">
                                        <i class="bi bi-calendar-check-fill me-2"></i>
                                        <small>@os.DataFechamento.Value.ToString("dd/MM")</small>
                                    </div>
                                }
                            </Card>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (showNewCardForm)
{
    <div class="modal d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Novo Cliente - @newCardStatus</h5>
                    <button type="button" class="btn-close" @onclick="CloseNewCardForm"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Número da OS</label>
                        <input class="form-control" placeholder="OS" @bind="newCardOs" type="number" />
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Nome do Cliente</label>
                        <input class="form-control" placeholder="Cliente" @bind="newCardCliente" />
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Placa do Veículo</label>
                        <input class="form-control" placeholder="Placa" @bind="newCardPlaca" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" @onclick="AddNewCard">
                        <i class="bi bi-check-lg me-1"></i>Adicionar
                    </button>
                    <button type="button" class="btn btn-secondary" @onclick="CloseNewCardForm">
                        <i class="bi bi-x-lg me-1"></i>Cancelar
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<string> StateUses = new List<string>
    {
        "Aguardando", "Orçamento", "Aguard. Peça", "Execução", "Teste/Lavagem", "Pronto"
    };
    
    private List<OrdemServico> Os = new List<OrdemServico>();
    private OrdemServico? item;
    private string? dropTargetStatus = null;

    private bool showNewCardForm = false;
    private string newCardStatus = "";
    private int newCardOs;
    private string newCardCliente = string.Empty;
    private string newCardPlaca = string.Empty;

    protected override void OnInitialized()
    {
        Os.Add(new OrdemServico
        {
            Os = 1023,
            Cliente = "José da Silva",
            Placa = "ABC-1234",
            Status = "Execução",
            DataAbertura = DateTime.Now.AddHours(-48)
        });
        Os.Add(new OrdemServico
        {
            Os = 1024,
            Cliente = "Maria Souza",
            Placa = "XYZ-5678",
            Status = "Aguard. Peça",
            DataAbertura = DateTime.Now.AddHours(-24)
        });
        Os.Add(new OrdemServico
        {
            Os = 1025,
            Cliente = "Carlos Pereira",
            Placa = "QWE-9101",
            Status = "Pronto",
            DataAbertura = DateTime.Now.AddDays(-5),
            DataFechamento = DateTime.Now.AddDays(-1)
        });
        Os.Add(new OrdemServico
        {
            Os = 1026,
            Cliente = "Ana Costa",
            Placa = "JKL-1121",
            Status = "Aguardando",
            DataAbertura = DateTime.Now.AddHours(-2)
        });
        Os.Add(new OrdemServico
        {
            Os = 1027,
            Cliente = "Beatriz Lima",
            Placa = "RST-0099",
            Status = "Aguardando",
            DataAbertura = DateTime.Now.AddMinutes(-30)
        });
    }

    private void HandleDragStart(OrdemServico i) => item = i;

    private void HandleDrop(string newStatus)
    {
        if (item != null)
        {
            item.Status = newStatus;
            item.DataFechamento = newStatus == "Pronto" ? DateTime.Now : null;
            StateHasChanged();
            dropTargetStatus = null;
            item = null;
        }
    }

    private void OnDragOver(DragEventArgs e) { }

    private void HandleDragEnter(string status) => dropTargetStatus = status;

    private void OpenNewCardForm(string status)
    {
        newCardStatus = status;
        newCardOs = Os.Max(o => o.Os) + 1;
        newCardCliente = string.Empty;
        newCardPlaca = string.Empty;
        showNewCardForm = true;
    }

    private void CloseNewCardForm() => showNewCardForm = false;

    private void AddNewCard()
    {
        Os.Add(new OrdemServico
        {
            Os = newCardOs,
            Cliente = newCardCliente,
            Placa = newCardPlaca,
            Status = newCardStatus,
            DataAbertura = DateTime.Now
        });

        showNewCardForm = false;
    }
}